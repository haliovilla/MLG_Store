{"ast":null,"code":"import { environment } from '../../environment';\nimport { ReplaySubject, map } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"./error.service\";\nexport class ArticleService {\n  constructor(http, errorService) {\n    this.http = http;\n    this.errorService = errorService;\n    this.apiUrl = `${environment.apiUrlBase}/Articles`;\n    this.list = [];\n    this._articles = new ReplaySubject(1);\n    //this.getAll();\n  }\n\n  set Articles(value) {\n    this.list = value;\n    this._articles.next(this.list);\n  }\n  get Articles$() {\n    return this._articles.asObservable();\n  }\n  httpCall() {\n    return this.http.get(this.apiUrl);\n  }\n  getAll() {\n    this.httpCall().subscribe({\n      next: response => {\n        this.Articles = response.data;\n      },\n      error: error => {\n        this.Articles = [];\n        this.errorService.logError(error);\n      }\n    });\n  }\n  insert(article) {\n    return this.http.post(this.apiUrl, article).pipe(map(response => {\n      if (response.success) {\n        this.add(response.data);\n        return response.data;\n      }\n      this.errorService.logError(response);\n      return null;\n    }));\n  }\n  update(id, article) {\n    const uri = `${this.apiUrl}/${id}`;\n    return this.http.put(this.apiUrl, article).pipe(map(response => {\n      if (response.success) {\n        this.edit(response.data);\n        return response.data;\n      }\n      this.errorService.logError(response);\n      return null;\n    }));\n  }\n  delete(id) {\n    const uri = `${this.apiUrl}/${id}`;\n    return this.http.delete(uri).pipe(map(response => {\n      if (response.success) {\n        this.remove(id);\n        return true;\n      }\n      this.errorService.logError(response);\n      return false;\n    }));\n  }\n  add(item) {\n    this.list.unshift(item);\n    this._articles.next(this.list);\n  }\n  edit(item) {\n    const idx = this.list.findIndex(x => x.id === item.id);\n    this.list[idx] = item;\n    this._articles.next(this.list);\n  }\n  remove(id) {\n    const idx = this.list.findIndex(x => x.id === id);\n    this.list.splice(idx, 1);\n    this._articles.next(this.list);\n  }\n  static #_ = this.ɵfac = function ArticleService_Factory(t) {\n    return new (t || ArticleService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.ErrorService));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ArticleService,\n    factory: ArticleService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["environment","ReplaySubject","map","ArticleService","constructor","http","errorService","apiUrl","apiUrlBase","list","_articles","Articles","value","next","Articles$","asObservable","httpCall","get","getAll","subscribe","response","data","error","logError","insert","article","post","pipe","success","add","update","id","uri","put","edit","delete","remove","item","unshift","idx","findIndex","x","splice","_","i0","ɵɵinject","i1","HttpClient","i2","ErrorService","_2","factory","ɵfac","providedIn"],"sources":["c:\\projects\\personal\\2023\\mlg\\MLGStore_UI\\src\\app\\services\\article.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { environment } from '../../environment';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable, ReplaySubject, map } from 'rxjs';\r\nimport { ArticleDTO, CreateArticleDTO, CreateArticleWithImageUrlDTO } from '../models/article';\r\nimport { Result } from '../models/result';\r\nimport { ErrorService } from './error.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ArticleService {\r\n\r\n  apiUrl: string = `${environment.apiUrlBase}/Articles`;;\r\n\r\n  private _articles: ReplaySubject<Array<ArticleDTO>>;\r\n  private list: Array<ArticleDTO> = [];\r\n\r\n  constructor(private http: HttpClient,\r\n    private errorService: ErrorService) {\r\n    this._articles = new ReplaySubject<Array<ArticleDTO>>(1);\r\n    //this.getAll();\r\n  }\r\n\r\n  set Articles(value: Array<ArticleDTO>) {\r\n    this.list = value;\r\n    this._articles.next(this.list);\r\n  }\r\n\r\n  get Articles$(): Observable<Array<ArticleDTO>> {\r\n    return this._articles.asObservable();\r\n  }\r\n\r\n  private httpCall(): Observable<Result<Array<ArticleDTO>>> {\r\n    return this.http\r\n      .get<Result<Array<ArticleDTO>>>(this.apiUrl);\r\n  }\r\n\r\n  private getAll() {\r\n    this.httpCall().subscribe({\r\n      next: (response) => {\r\n        this.Articles = response.data;\r\n      }, error: (error) => {\r\n        this.Articles = [];\r\n        this.errorService.logError(error);\r\n      }\r\n    })\r\n  }\r\n\r\n  insert(article: CreateArticleWithImageUrlDTO): Observable<ArticleDTO> {\r\n    return this.http.post<Result<ArticleDTO>>(this.apiUrl, article)\r\n      .pipe(map((response: Result<ArticleDTO>) => {\r\n        if (response.success) {\r\n          this.add(response.data);\r\n          return response.data;\r\n        }\r\n        this.errorService.logError(response);\r\n        return null as any;\r\n      }));\r\n  }\r\n\r\n  update(id: number, article: CreateArticleWithImageUrlDTO): Observable<ArticleDTO> {\r\n    const uri = `${this.apiUrl}/${id}`;\r\n    return this.http.put<Result<ArticleDTO>>(this.apiUrl, article)\r\n      .pipe(map((response: Result<ArticleDTO>) => {\r\n        if (response.success) {\r\n          this.edit(response.data);\r\n          return response.data;\r\n        }\r\n        this.errorService.logError(response);\r\n        return null as any;\r\n      }));\r\n  }\r\n\r\n  delete(id: number): Observable<boolean> {\r\n    const uri = `${this.apiUrl}/${id}`;\r\n    return this.http.delete<Result<boolean>>(uri)\r\n      .pipe(map((response: Result<boolean>) => {\r\n        if (response.success) {\r\n          this.remove(id);\r\n          return true;\r\n        }\r\n        this.errorService.logError(response);\r\n        return false;\r\n      }));\r\n  }\r\n\r\n  private add(item: ArticleDTO) {\r\n    this.list.unshift(item);\r\n    this._articles.next(this.list);\r\n  }\r\n\r\n  private edit(item: ArticleDTO) {\r\n    const idx = this.list.findIndex(x => x.id === item.id);\r\n    this.list[idx] = item;\r\n    this._articles.next(this.list);\r\n  }\r\n\r\n  private remove(id: number) {\r\n    const idx = this.list.findIndex(x => x.id === id);\r\n    this.list.splice(idx, 1);\r\n    this._articles.next(this.list);\r\n  }\r\n\r\n\r\n\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}