{"ast":null,"code":"import { Subject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nexport class LoadingService {\n  constructor() {\n    this._loading = false;\n    this.loadingStatus = new Subject();\n  }\n  get loading() {\n    return this._loading;\n  }\n  set loading(value) {\n    this._loading = value;\n    this.loadingStatus.next(value);\n  }\n  show() {\n    this.loading = true;\n  }\n  hide() {\n    this.loading = false;\n  }\n  static #_ = this.ɵfac = function LoadingService_Factory(t) {\n    return new (t || LoadingService)();\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: LoadingService,\n    factory: LoadingService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["Subject","LoadingService","constructor","_loading","loadingStatus","loading","value","next","show","hide","_","_2","factory","ɵfac","providedIn"],"sources":["c:\\projects\\personal\\2023\\mlg\\MLGStore_UI\\src\\app\\common\\components\\loading\\loading.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class LoadingService {\r\n\r\n  private _loading = false;\r\n  loadingStatus = new Subject<boolean>();\r\n\r\n  get loading(): boolean {\r\n    return this._loading;\r\n  }\r\n\r\n  set loading(value: boolean) {\r\n    this._loading = value;\r\n    this.loadingStatus.next(value);\r\n  }\r\n\r\n  show() {\r\n    this.loading = true;\r\n  }\r\n\r\n  hide() {\r\n    this.loading = false;\r\n  }\r\n\r\n\r\n}\r\n"],"mappings":"AACA,SAASA,OAAO,QAAQ,MAAM;;AAK9B,OAAM,MAAOC,cAAc;EAH3BC,YAAA;IAKU,KAAAC,QAAQ,GAAG,KAAK;IACxB,KAAAC,aAAa,GAAG,IAAIJ,OAAO,EAAW;;EAEtC,IAAIK,OAAOA,CAAA;IACT,OAAO,IAAI,CAACF,QAAQ;EACtB;EAEA,IAAIE,OAAOA,CAACC,KAAc;IACxB,IAAI,CAACH,QAAQ,GAAGG,KAAK;IACrB,IAAI,CAACF,aAAa,CAACG,IAAI,CAACD,KAAK,CAAC;EAChC;EAEAE,IAAIA,CAAA;IACF,IAAI,CAACH,OAAO,GAAG,IAAI;EACrB;EAEAI,IAAIA,CAAA;IACF,IAAI,CAACJ,OAAO,GAAG,KAAK;EACtB;EAAC,QAAAK,CAAA,G;qBApBUT,cAAc;EAAA;EAAA,QAAAU,EAAA,G;WAAdV,cAAc;IAAAW,OAAA,EAAdX,cAAc,CAAAY,IAAA;IAAAC,UAAA,EAFb;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}