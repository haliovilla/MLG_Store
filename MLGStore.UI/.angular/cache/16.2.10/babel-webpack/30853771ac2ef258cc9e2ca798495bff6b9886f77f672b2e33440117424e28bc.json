{"ast":null,"code":"import { BehaviorSubject, map } from 'rxjs';\nimport { environment } from '../../environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"./error.service\";\nexport class AuthService {\n  constructor(http, errorService) {\n    this.http = http;\n    this.errorService = errorService;\n    this.apiUrl = `${environment.apiUrlBase}/Account`;\n    this.sessionTokenSubject = new BehaviorSubject(JSON.parse(localStorage.getItem(\"token\")));\n  }\n  sessionTokenValue() {\n    return this.sessionTokenSubject?.value;\n  }\n  login(loginRequest) {\n    const uri = `${this.apiUrl}/Login`;\n    ;\n    return this.http.post(uri, loginRequest).pipe(map(response => {\n      if (response.success && response.data && response.data !== '') {\n        localStorage.setItem(\"token\", response.data);\n        return true;\n      }\n      this.errorService.logError(response);\n      return false;\n    }));\n  }\n  logout() {\n    localStorage.removeItem(\"token\");\n    this.sessionTokenSubject?.next(null);\n  }\n  static #_ = this.ɵfac = function AuthService_Factory(t) {\n    return new (t || AuthService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.ErrorService));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthService,\n    factory: AuthService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["BehaviorSubject","map","environment","AuthService","constructor","http","errorService","apiUrl","apiUrlBase","sessionTokenSubject","JSON","parse","localStorage","getItem","sessionTokenValue","value","login","loginRequest","uri","post","pipe","response","success","data","setItem","logError","logout","removeItem","next","_","i0","ɵɵinject","i1","HttpClient","i2","ErrorService","_2","factory","ɵfac","providedIn"],"sources":["c:\\projects\\personal\\2023\\mlg\\MLGStore_UI\\src\\app\\services\\auth.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject, Observable, map } from 'rxjs';\r\nimport { environment } from '../../environment';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Router } from '@angular/router';\r\nimport { ErrorService } from './error.service';\r\nimport { LoginRequestDTO } from '../models/login';\r\nimport { Result } from '../models/result';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthService {\r\n\r\n  private sessionTokenSubject: BehaviorSubject<string> | undefined;\r\n  public sessionToken$!: Observable<string>;\r\n\r\n  apiUrl: string = `${environment.apiUrlBase}/Account`;;\r\n\r\n  constructor(private http: HttpClient,\r\n    private errorService: ErrorService) {\r\n    this.sessionTokenSubject = new BehaviorSubject<string>(JSON.parse(localStorage.getItem(\"token\") as string));\r\n  }\r\n\r\n  public sessionTokenValue(): string | undefined {\r\n    return this.sessionTokenSubject?.value;\r\n  }\r\n\r\n  login(loginRequest: LoginRequestDTO) {\r\n    const uri = `${this.apiUrl}/Login`;;\r\n    return this.http.post<Result<string>>(uri, loginRequest)\r\n      .pipe(map((response: Result<string>) => {\r\n        if (response.success && response.data && response.data !== '') {\r\n          localStorage.setItem(\"token\", response.data);\r\n          return true;\r\n        }\r\n        this.errorService.logError(response);\r\n        return false;\r\n      }));\r\n  }\r\n\r\n  logout() {\r\n    localStorage.removeItem(\"token\");\r\n    this.sessionTokenSubject?.next(null as any);\r\n  }\r\n}\r\n"],"mappings":"AACA,SAASA,eAAe,EAAcC,GAAG,QAAQ,MAAM;AACvD,SAASC,WAAW,QAAQ,mBAAmB;;;;AAU/C,OAAM,MAAOC,WAAW;EAOtBC,YAAoBC,IAAgB,EAC1BC,YAA0B;IADhB,KAAAD,IAAI,GAAJA,IAAI;IACd,KAAAC,YAAY,GAAZA,YAAY;IAHtB,KAAAC,MAAM,GAAW,GAAGL,WAAW,CAACM,UAAU,UAAU;IAIlD,IAAI,CAACC,mBAAmB,GAAG,IAAIT,eAAe,CAASU,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAW,CAAC,CAAC;EAC7G;EAEOC,iBAAiBA,CAAA;IACtB,OAAO,IAAI,CAACL,mBAAmB,EAAEM,KAAK;EACxC;EAEAC,KAAKA,CAACC,YAA6B;IACjC,MAAMC,GAAG,GAAG,GAAG,IAAI,CAACX,MAAM,QAAQ;IAAC;IACnC,OAAO,IAAI,CAACF,IAAI,CAACc,IAAI,CAAiBD,GAAG,EAAED,YAAY,CAAC,CACrDG,IAAI,CAACnB,GAAG,CAAEoB,QAAwB,IAAI;MACrC,IAAIA,QAAQ,CAACC,OAAO,IAAID,QAAQ,CAACE,IAAI,IAAIF,QAAQ,CAACE,IAAI,KAAK,EAAE,EAAE;QAC7DX,YAAY,CAACY,OAAO,CAAC,OAAO,EAAEH,QAAQ,CAACE,IAAI,CAAC;QAC5C,OAAO,IAAI;;MAEb,IAAI,CAACjB,YAAY,CAACmB,QAAQ,CAACJ,QAAQ,CAAC;MACpC,OAAO,KAAK;IACd,CAAC,CAAC,CAAC;EACP;EAEAK,MAAMA,CAAA;IACJd,YAAY,CAACe,UAAU,CAAC,OAAO,CAAC;IAChC,IAAI,CAAClB,mBAAmB,EAAEmB,IAAI,CAAC,IAAW,CAAC;EAC7C;EAAC,QAAAC,CAAA,G;qBAhCU1B,WAAW,EAAA2B,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA,GAAAH,EAAA,CAAAC,QAAA,CAAAG,EAAA,CAAAC,YAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAXjC,WAAW;IAAAkC,OAAA,EAAXlC,WAAW,CAAAmC,IAAA;IAAAC,UAAA,EAFV;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}