{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../services/auth.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/forms\";\nexport class LoginComponent {\n  constructor(authService, router, fb) {\n    this.authService = authService;\n    this.router = router;\n    this.fb = fb;\n  }\n  ngOnInit() {\n    this.loginForm = this.fb.group({\n      username: ['', [Validators.required]],\n      password: ['', [Validators.required]]\n    });\n  }\n  isValidForm() {\n    return this.loginForm.valid;\n  }\n  login() {\n    if (this.isValidForm()) {\n      this.authService.login(this.loginForm.value).subscribe(response => {\n        if (response) {\n          this.router.navigate(['home']);\n        } else {\n          alert(\"Invalid username or password\");\n        }\n      });\n    }\n  }\n  static #_ = this.ɵfac = function LoginComponent_Factory(t) {\n    return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.AuthService), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.FormBuilder));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: LoginComponent,\n    selectors: [[\"app-login\"]],\n    decls: 14,\n    vars: 2,\n    consts: [[1, \"card\", \"p-4\"], [1, \"mb-4\", \"text-center\"], [3, \"formGroup\"], [1, \"mb-3\"], [\"for\", \"username\", 1, \"form-label\"], [\"type\", \"text\", \"id\", \"username\", \"formControlName\", \"username\", \"required\", \"\", \"autofocus\", \"\", 1, \"form-control\"], [\"for\", \"password\", 1, \"form-label\"], [\"type\", \"password\", \"id\", \"password\", \"formControlName\", \"password\", \"required\", \"\", 1, \"form-control\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", 3, \"disabled\", \"click\"]],\n    template: function LoginComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\", 1);\n        i0.ɵɵtext(2, \" Inicia Sesi\\u00F3n \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"form\", 2)(4, \"div\", 3)(5, \"label\", 4);\n        i0.ɵɵtext(6, \"Nombre de usuario:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(7, \"input\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"div\", 3)(9, \"label\", 6);\n        i0.ɵɵtext(10, \"Contrase\\u00F1a:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(11, \"input\", 7);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(12, \"button\", 8);\n        i0.ɵɵlistener(\"click\", function LoginComponent_Template_button_click_12_listener() {\n          return ctx.login();\n        });\n        i0.ɵɵtext(13, \" Iniciar Sesi\\u00F3n \");\n        i0.ɵɵelementEnd()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"formGroup\", ctx.loginForm);\n        i0.ɵɵadvance(9);\n        i0.ɵɵproperty(\"disabled\", !ctx.isValidForm());\n      }\n    },\n    dependencies: [i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.RequiredValidator, i3.FormGroupDirective, i3.FormControlName],\n    styles: [\".card[_ngcontent-%COMP%] {\\n  position: absolute;\\n  top: 50%;\\n  left: 50%;\\n  transform: translate(-50%, -50%);\\n  text-align: center;\\n  max-width: 500px;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvaG9tZS9sb2dpbi9sb2dpbi5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFDQTtFQUNFLGtCQUFBO0VBQ0EsUUFBQTtFQUNBLFNBQUE7RUFDQSxnQ0FBQTtFQUNBLGtCQUFBO0VBQ0EsZ0JBQUE7QUFBRiIsInNvdXJjZXNDb250ZW50IjpbIlxuLmNhcmQge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHRvcDogNTAlO1xuICBsZWZ0OiA1MCU7XG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlKC01MCUsIC01MCUpO1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIG1heC13aWR0aDogNTAwcHg7XG59XG4iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n  });\n}","map":{"version":3,"names":["Validators","LoginComponent","constructor","authService","router","fb","ngOnInit","loginForm","group","username","required","password","isValidForm","valid","login","value","subscribe","response","navigate","alert","_","i0","ɵɵdirectiveInject","i1","AuthService","i2","Router","i3","FormBuilder","_2","selectors","decls","vars","consts","template","LoginComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵelement","ɵɵlistener","LoginComponent_Template_button_click_12_listener","ɵɵadvance","ɵɵproperty"],"sources":["c:\\projects\\personal\\2023\\mlg\\MLGStore_UI\\src\\app\\home\\login\\login.component.ts","c:\\projects\\personal\\2023\\mlg\\MLGStore_UI\\src\\app\\home\\login\\login.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { AuthService } from '../../services/auth.service';\r\nimport { Router } from '@angular/router';\r\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit{\r\n\r\n  loginForm!: FormGroup;\r\n\r\n  constructor(private authService: AuthService,\r\n    private router:Router,\r\n    private fb: FormBuilder) { }\r\n\r\n  ngOnInit(): void {\r\n    this.loginForm = this.fb.group({\r\n      username: ['', [Validators.required]],\r\n      password: ['', [Validators.required]],\r\n    });\r\n  }\n\n  isValidForm(): boolean {\n    return this.loginForm.valid;\n  }\n\n  login() {\nif (this.isValidForm()) {\n      this.authService.login(this.loginForm.value)\n        .subscribe((response) => {\n          if (response) {\n            this.router.navigate(['home']);\n          } else {\n            alert(\"Invalid username or password\");\n          }\n        });\n    }\n  }\n\n}\n","\n<div class=\"card p-4\">\n  <h2 class=\"mb-4 text-center\">\n    Inicia Sesión\n  </h2>\n\n  <form [formGroup]=\"loginForm\">\n    <div class=\"mb-3\">\n      <label for=\"username\" class=\"form-label\">Nombre de usuario:</label>\n      <input type=\"text\" class=\"form-control\" id=\"username\" formControlName=\"username\" required autofocus />\n    </div>\n\n    <div class=\"mb-3\">\n      <label for=\"password\" class=\"form-label\">Contraseña:</label>\n      <input type=\"password\" class=\"form-control\" id=\"password\" formControlName=\"password\" required>\n    </div>\n\n    <button type=\"submit\"\n            class=\"btn btn-primary\"\n            [disabled]=\"!isValidForm()\"\n            (click)=\"login()\">\n      Iniciar Sesión\n    </button>\n  </form>\n</div>\n"],"mappings":"AACA,SAAiCA,UAAU,QAAQ,gBAAgB;;;;;AASnE,OAAM,MAAOC,cAAc;EAIzBC,YAAoBC,WAAwB,EAClCC,MAAa,EACbC,EAAe;IAFL,KAAAF,WAAW,GAAXA,WAAW;IACrB,KAAAC,MAAM,GAANA,MAAM;IACN,KAAAC,EAAE,GAAFA,EAAE;EAAiB;EAE7BC,QAAQA,CAAA;IACN,IAAI,CAACC,SAAS,GAAG,IAAI,CAACF,EAAE,CAACG,KAAK,CAAC;MAC7BC,QAAQ,EAAE,CAAC,EAAE,EAAE,CAACT,UAAU,CAACU,QAAQ,CAAC,CAAC;MACrCC,QAAQ,EAAE,CAAC,EAAE,EAAE,CAACX,UAAU,CAACU,QAAQ,CAAC;KACrC,CAAC;EACJ;EAEAE,WAAWA,CAAA;IACT,OAAO,IAAI,CAACL,SAAS,CAACM,KAAK;EAC7B;EAEAC,KAAKA,CAAA;IACP,IAAI,IAAI,CAACF,WAAW,EAAE,EAAE;MAClB,IAAI,CAACT,WAAW,CAACW,KAAK,CAAC,IAAI,CAACP,SAAS,CAACQ,KAAK,CAAC,CACzCC,SAAS,CAAEC,QAAQ,IAAI;QACtB,IAAIA,QAAQ,EAAE;UACZ,IAAI,CAACb,MAAM,CAACc,QAAQ,CAAC,CAAC,MAAM,CAAC,CAAC;SAC/B,MAAM;UACLC,KAAK,CAAC,8BAA8B,CAAC;;MAEzC,CAAC,CAAC;;EAER;EAAC,QAAAC,CAAA,G;qBA9BUnB,cAAc,EAAAoB,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,WAAA,GAAAH,EAAA,CAAAC,iBAAA,CAAAG,EAAA,CAAAC,MAAA,GAAAL,EAAA,CAAAC,iBAAA,CAAAK,EAAA,CAAAC,WAAA;EAAA;EAAA,QAAAC,EAAA,G;UAAd5B,cAAc;IAAA6B,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,wBAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCT3Bf,EAAA,CAAAiB,cAAA,aAAsB;QAElBjB,EAAA,CAAAkB,MAAA,2BACF;QAAAlB,EAAA,CAAAmB,YAAA,EAAK;QAELnB,EAAA,CAAAiB,cAAA,cAA8B;QAEejB,EAAA,CAAAkB,MAAA,yBAAkB;QAAAlB,EAAA,CAAAmB,YAAA,EAAQ;QACnEnB,EAAA,CAAAoB,SAAA,eAAsG;QACxGpB,EAAA,CAAAmB,YAAA,EAAM;QAENnB,EAAA,CAAAiB,cAAA,aAAkB;QACyBjB,EAAA,CAAAkB,MAAA,wBAAW;QAAAlB,EAAA,CAAAmB,YAAA,EAAQ;QAC5DnB,EAAA,CAAAoB,SAAA,gBAA8F;QAChGpB,EAAA,CAAAmB,YAAA,EAAM;QAENnB,EAAA,CAAAiB,cAAA,iBAG0B;QAAlBjB,EAAA,CAAAqB,UAAA,mBAAAC,iDAAA;UAAA,OAASN,GAAA,CAAAvB,KAAA,EAAO;QAAA,EAAC;QACvBO,EAAA,CAAAkB,MAAA,6BACF;QAAAlB,EAAA,CAAAmB,YAAA,EAAS;;;QAhBLnB,EAAA,CAAAuB,SAAA,GAAuB;QAAvBvB,EAAA,CAAAwB,UAAA,cAAAR,GAAA,CAAA9B,SAAA,CAAuB;QAanBc,EAAA,CAAAuB,SAAA,GAA2B;QAA3BvB,EAAA,CAAAwB,UAAA,cAAAR,GAAA,CAAAzB,WAAA,GAA2B"},"metadata":{},"sourceType":"module","externalDependencies":[]}