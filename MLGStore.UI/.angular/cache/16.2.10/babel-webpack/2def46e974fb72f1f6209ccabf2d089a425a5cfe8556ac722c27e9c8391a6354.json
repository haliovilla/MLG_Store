{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { Validators } from '@angular/forms';\nexport let LoginComponent = class LoginComponent {\n  constructor(authService, router, fb) {\n    this.authService = authService;\n    this.router = router;\n    this.fb = fb;\n  }\n  ngOnInit() {\n    this.loginForm = this.fb.group({\n      username: ['', [Validators.required]],\n      password: ['', [Validators.required]]\n    });\n  }\n  isValidForm() {\n    return this.loginForm.valid;\n  }\n  login() {\n    if (this.isValidForm()) {\n      this.authService.login(this.loginForm.value).subscribe(response => {\n        if (response) {\n          this.router.navigate(['home']);\n        } else {\n          alert(\"Invalid username or password\");\n        }\n      });\n    }\n  }\n};\nLoginComponent = __decorate([Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})], LoginComponent);","map":{"version":3,"names":["Component","Validators","LoginComponent","constructor","authService","router","fb","ngOnInit","loginForm","group","username","required","password","isValidForm","valid","login","value","subscribe","response","navigate","alert","__decorate","selector","templateUrl","styleUrls"],"sources":["c:\\projects\\personal\\2023\\mlg\\MLGStore_UI\\src\\app\\home\\login\\login.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { AuthService } from '../../services/auth.service';\r\nimport { Router } from '@angular/router';\r\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit{\r\n\r\n  loginForm!: FormGroup;\r\n\r\n  constructor(private authService: AuthService,\r\n    private router:Router,\r\n    private fb: FormBuilder) { }\r\n\r\n  ngOnInit(): void {\r\n    this.loginForm = this.fb.group({\r\n      username: ['', [Validators.required]],\r\n      password: ['', [Validators.required]],\r\n    });\r\n  }\n\n  isValidForm(): boolean {\n    return this.loginForm.valid;\n  }\n\n  login() {\nif (this.isValidForm()) {\n      this.authService.login(this.loginForm.value)\n        .subscribe((response) => {\n          if (response) {\n            this.router.navigate(['home']);\n          } else {\n            alert(\"Invalid username or password\");\n          }\n        });\n    }\n  }\n\n}\n"],"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AACjD,SAAiCC,UAAU,QAAQ,gBAAgB;AAS5D,WAAMC,cAAc,GAApB,MAAMA,cAAc;EAIzBC,YAAoBC,WAAwB,EAClCC,MAAa,EACbC,EAAe;IAFL,KAAAF,WAAW,GAAXA,WAAW;IACrB,KAAAC,MAAM,GAANA,MAAM;IACN,KAAAC,EAAE,GAAFA,EAAE;EAAiB;EAE7BC,QAAQA,CAAA;IACN,IAAI,CAACC,SAAS,GAAG,IAAI,CAACF,EAAE,CAACG,KAAK,CAAC;MAC7BC,QAAQ,EAAE,CAAC,EAAE,EAAE,CAACT,UAAU,CAACU,QAAQ,CAAC,CAAC;MACrCC,QAAQ,EAAE,CAAC,EAAE,EAAE,CAACX,UAAU,CAACU,QAAQ,CAAC;KACrC,CAAC;EACJ;EAEAE,WAAWA,CAAA;IACT,OAAO,IAAI,CAACL,SAAS,CAACM,KAAK;EAC7B;EAEAC,KAAKA,CAAA;IACP,IAAI,IAAI,CAACF,WAAW,EAAE,EAAE;MAClB,IAAI,CAACT,WAAW,CAACW,KAAK,CAAC,IAAI,CAACP,SAAS,CAACQ,KAAK,CAAC,CACzCC,SAAS,CAAEC,QAAQ,IAAI;QACtB,IAAIA,QAAQ,EAAE;UACZ,IAAI,CAACb,MAAM,CAACc,QAAQ,CAAC,CAAC,MAAM,CAAC,CAAC;SAC/B,MAAM;UACLC,KAAK,CAAC,8BAA8B,CAAC;;MAEzC,CAAC,CAAC;;EAER;CAED;AAhCYlB,cAAc,GAAAmB,UAAA,EAL1BrB,SAAS,CAAC;EACTsB,QAAQ,EAAE,WAAW;EACrBC,WAAW,EAAE,wBAAwB;EACrCC,SAAS,EAAE,CAAC,wBAAwB;CACrC,CAAC,C,EACWtB,cAAc,CAgC1B"},"metadata":{},"sourceType":"module","externalDependencies":[]}